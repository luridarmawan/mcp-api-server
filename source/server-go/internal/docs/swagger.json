{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation.",
        "title": "My API",
        "contact": {
            "name": "CARIK Team",
            "email": "halo@carik.id"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/employee/list": {
            "get": {
                "description": "Retrieve a paginated list of all employees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee list",
                "responses": {
                    "200": {
                        "description": "Success response\" Example({\"success\":true,\"code\":0,\"data\":[{...}]})",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employee/occupation": {
            "get": {
                "description": "Retrieve available occupations, optionally filtered by employee code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee occupations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by employee code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mcp": {
            "post": {
                "description": "Handle MCP request processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "Execute MCP request",
                "parameters": [
                    {
                        "description": "MCP Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BaseResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "@Example 99",
                    "type": "integer"
                },
                "data": {},
                "success": {
                    "description": "@Example true",
                    "type": "boolean"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "@Example \"Invalid request\"",
                    "type": "string"
                },
                "success": {
                    "description": "@Example false",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}