name: Build and Deploy Server-GO to VPS

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Change to project directory
        working-directory: source/server-go
        run: echo "Moved to source/server-go"

      - name: Install dependencies
        working-directory: source/server-go
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          go mod tidy

      - name: Build binary
        working-directory: source/server-go
        run: |
          if [ "$GITHUB_REF" = "refs/heads/main" ]; then
            make build-arm64
            echo "BUILD_OUTPUT=api-server-arm64" >> $GITHUB_ENV
          elif [ "$GITHUB_REF" = "refs/heads/development" ]; then
            make build-arm64
            echo "BUILD_OUTPUT=api-server-arm64" >> $GITHUB_ENV
          fi

      - name: Determine deployment target
        id: deployment
        run: |
          if [ "$GITHUB_REF" = "refs/heads/main" ]; then
            echo "HOST=${{ secrets.PROD_HOST }}" >> $GITHUB_OUTPUT
            echo "USERNAME=${{ secrets.PROD_USER }}" >> $GITHUB_OUTPUT
            echo "SSH_KEY=${{ secrets.PROD_SSH_KEY }}" >> $GITHUB_OUTPUT
            echo "TARGET_PATH=~/app/server-go/api-server" >> $GITHUB_OUTPUT
            echo "SERVICE_NAME=api-server" >> $GITHUB_OUTPUT
          elif [ "$GITHUB_REF" = "refs/heads/development" ]; then
            echo "HOST=${{ secrets.DEV_HOST }}" >> $GITHUB_OUTPUT
            echo "USERNAME=${{ secrets.DEV_USER }}" >> $GITHUB_OUTPUT
            echo "SSH_KEY=${{ secrets.DEV_SSH_KEY }}" >> $GITHUB_OUTPUT
            echo "TARGET_PATH=~/app/server-go/api-server" >> $GITHUB_OUTPUT
            echo "SERVICE_NAME=api-server" >> $GITHUB_OUTPUT
          fi

      - name: Copy binary to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ steps.deployment.outputs.HOST }}
          username: ${{ steps.deployment.outputs.USERNAME }}
          key: ${{ steps.deployment.outputs.SSH_KEY }}
          port: 22
          source: "./source/server-go/bin/${{ env.BUILD_OUTPUT }}"
          target: ${{ steps.deployment.outputs.TARGET_PATH }}
          strip_components: 3

      - name: Restart service
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ steps.deployment.outputs.HOST }}
          username: ${{ steps.deployment.outputs.USERNAME }}
          key: ${{ steps.deployment.outputs.SSH_KEY }}
          port: 22
          script: |
            systemctl --user restart ${{ steps.deployment.outputs.SERVICE_NAME }}